name: Develop BuckBuck

on:
  push:
    branches: [ "feature/logging" ]

jobs:
  deployment:
    runs-on: self-hosted
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: node.js Setup
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run build --if-present

      - name: Testing env setup
#        env:
#          TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
#          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
#          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
#          DB_NAME: ${{ secrets.DB_NAME }}
#          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
#          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
#          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
#          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        run: |
          touch .env.local
          echo "${{ secrets.ENV }}" >> .env.local
          
          echo "--------test-------"
          cat .env.local
#          echo DB_HOST=$TEST_DB_HOST >> .env.local
#          echo DB_USER=$TEST_DB_USER >> .env.local
#          echo DB_PASSWORD=$TEST_DB_PASSWORD >> .env.local
#          echo DB_NAME=$DB_NAME >> .env.local
#          echo JWT_SECRET_KEY=$JWT_SECRET_KEY >> .env.local
#          echo S3_ACCESS_KEY=$S3_ACCESS_KEY >> .env.local
#          echo S3_SECRET_ACCESS_KEY=$S3_SECRET_ACCESS_KEY >> .env.local
#          echo BUCKET_NAME=$BUCKET_NAME >> .env.local

      - name: Run test
        run: |
          npm test
          mv .env.local .env.develop
#          rm -rfv .env.local

########## 추후 변경 필요 (Develop 환경 추가 + Test 환경 분리 시 추가할 것) ##################
#      - name: Develop env setup
#        env:
#          DB_HOST: ${{ secrets.TEST_DB_HOST }}
#          DB_USER: ${{ secrets.TEST_DB_USER }}
#          DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
#          DB_NAME: ${{ secrets.DB_NAME }}
#          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
#          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
#          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
#          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
#        run: |
#          touch .env.develop
#          echo DB_HOST=$DB_HOST >> .env.develop
#          echo DB_USER=$DB_USER >> .env.develop
#          echo DB_PASSWORD=$DB_PASSWORD >> .env.develop
#          echo DB_NAME=$DB_NAME >> .env.develop
#          echo JWT_SECRET_KEY=$JWT_SECRET_KEY >> .env.develop
#          echo S3_ACCESS_KEY=$S3_ACCESS_KEY >> .env.develop
#          echo S3_SECRET_ACCESS_KEY=$S3_SECRET_ACCESS_KEY >> .env.develop
#          echo BUCKET_NAME=$BUCKET_NAME >> .env.develop
####################################################################################

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: buckbuck
          IMAGE_TAG: develop
        run: |
          docker build --no-cache -t $REPOSITORY:$IMAGE_TAG -f Dockerfile_DEV .
          docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker rmi $(docker images -q)
            docker pull ${{ steps.login-ecr.outputs.registry }}/buckbuck:develop || true
            docker stop dev-buckbuck
            docker rm dev-buckbuck
            docker run -d --name dev-buckbuck -p 2000:2000 ${{ steps.login-ecr.outputs.registry }}/buckbuck:develop
            echo "dev done"